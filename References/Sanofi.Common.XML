<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Sanofi.Common</name>
    </assembly>
    <members>
        <member name="M:Sanofi.Common.Helper.SQLHelper.ExecuteNonQuery(System.String,System.Data.CommandType,System.String,System.Data.SqlClient.SqlParameter[])">
             <summary>
            执行一个不需要返回值的SqlCommand命令，通过指定专用的连接字符串。
             使用参数数组形式提供参数列表 
             </summary>
             <remarks>
             使用示例：
              int result = ExecuteNonQuery(connString, CommandType.StoredProcedure, "PublishOrders", new SqlParameter("@prodid", 24));
             </remarks>
             <param name="connectionString">一个有效的数据库连接字符串</param>
             <param name="commandType">SqlCommand命令类型 (存储过程， T-SQL语句， 等等。)</param>
             <param name="commandText">存储过程的名字或者 T-SQL 语句</param>
             <param name="commandParameters">以数组形式提供SqlCommand命令中用到的参数列表</param>
             <returns>返回一个数值表示此SqlCommand命令执行后影响的行数</returns>
        </member>
        <member name="M:Sanofi.Common.Helper.SQLHelper.ExecuteNonQuery(System.Data.SqlClient.SqlConnection,System.Data.CommandType,System.String,System.Data.SqlClient.SqlParameter[])">
             <summary>
            执行一条不返回结果的SqlCommand，通过一个已经存在的数据库连接 
             使用参数数组提供参数
             </summary>
        </member>
        <member name="M:Sanofi.Common.Helper.SQLHelper.ExecuteNonQuery(System.Data.SqlClient.SqlTransaction,System.Data.CommandType,System.String,System.Data.SqlClient.SqlParameter[])">
            <summary>
            执行一条不返回结果的SqlCommand，通过一个已经存在的数据库事务处理 
            使用参数数组提供参数
            </summary>
        </member>
        <member name="M:Sanofi.Common.Helper.SQLHelper.ExecuteReader(System.String,System.Data.CommandType,System.String,System.Data.SqlClient.SqlParameter[])">
            <summary>
            执行一条返回结果集的SqlCommand命令，通过专用的连接字符串。
            使用参数数组提供参数
            </summary>
        </member>
        <member name="M:Sanofi.Common.Helper.SQLHelper.ExecuteScalar(System.String,System.Data.CommandType,System.String,System.Data.SqlClient.SqlParameter[])">
            <summary>
            执行一条返回第一条记录第一列的SqlCommand命令，通过专用的连接字符串。 
            使用参数数组提供参数
            </summary>
            <returns>返回一个object类型的数据，可以通过 Convert.To{Type}方法转换类型</returns>
        </member>
        <member name="M:Sanofi.Common.Helper.SQLHelper.ExecuteScalar(System.Data.SqlClient.SqlConnection,System.Data.CommandType,System.String,System.Data.SqlClient.SqlParameter[])">
            <summary>
            执行一条返回第一条记录第一列的SqlCommand命令，通过已经存在的数据库连接。
            使用参数数组提供参数
            </summary>
        </member>
        <member name="M:Sanofi.Common.Helper.SQLHelper.GetDataSet(System.String,System.Data.CommandType,System.String,System.Data.SqlClient.SqlParameter[])">
            <summary>
            返回数据集集合，可返回多个表，通过专用的连接字符串
            </summary>
        </member>
        <member name="M:Sanofi.Common.Helper.SQLHelper.GetDataTableByPage(System.String,System.Data.CommandType,System.String,System.Int32,System.Int32,System.Data.SqlClient.SqlParameter[])">
            <summary>
            返回查询结果中的一页的数据,实现真分页,提高查询性能,并返回查询结果的总行数,用于绑定分页控件
            </summary>
        </member>
        <member name="M:Sanofi.Common.Helper.SQLHelper.GetDataSet(System.Data.SqlClient.SqlConnection,System.Data.CommandType,System.String,System.Data.SqlClient.SqlParameter[])">
            <summary>
            返回数据集集合，可返回多个表，通过已经存在的数据库连接
            </summary>
        </member>
        <member name="M:Sanofi.Common.Helper.SQLHelper.CacheParameters(System.String,System.Data.SqlClient.SqlParameter[])">
            <summary>
            缓存参数数组
            </summary>
            <param name="cacheKey">参数缓存的键值</param>
            <param name="cmdParms">被缓存的参数列表</param>
        </member>
        <member name="M:Sanofi.Common.Helper.SQLHelper.GetCachedParameters(System.String)">
            <summary>
            获取被缓存的参数
            </summary>
            <param name="cacheKey">用于查找参数的KEY值</param>
            <returns>返回缓存的参数数组</returns>
        </member>
        <member name="M:Sanofi.Common.Helper.SQLHelper.PrepareCommand(System.Data.SqlClient.SqlCommand,System.Data.SqlClient.SqlConnection,System.Data.SqlClient.SqlTransaction,System.Data.CommandType,System.String,System.Data.SqlClient.SqlParameter[])">
            <summary>
            为执行命令准备参数
            </summary>
            <param name="cmd">SqlCommand 命令</param>
            <param name="conn">已经存在的数据库连接</param>
            <param name="trans">数据库事物处理</param>
            <param name="cmdType">SqlCommand命令类型 (存储过程， T-SQL语句， 等等。)</param>
            <param name="cmdText">Command text，T-SQL语句 例如 Select * from Products</param>
            <param name="cmdParms">返回带参数的命令</param>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Sanofi.Common.Extention.StringExtention.NoEmpty(System.String)" -->
        <member name="M:Sanofi.Common.Extention.StringExtention.ToDecimal(System.String)">
            <summary>
            转化为Decimal
            </summary>
            <param name="s"></param>
            <returns></returns>
        </member>
        <member name="M:Sanofi.Common.Extention.StringExtention.GetSubString(System.String,System.Int32)">
            <summary>
            获取分割字符串
            </summary>
            <param name="s"></param>
            <param name="len"></param>
            <returns></returns>
        </member>
        <member name="M:Sanofi.Common.Extention.StringExtention.ToString``1(System.Collections.Generic.List{``0},System.String)">
            <summary>
            数组转换为字符串
            </summary>
            <typeparam name="T"></typeparam>
            <param name="list"></param>
            <param name="separator"></param>
            <returns></returns>
        </member>
        <member name="F:Sanofi.Common.Extention.PageExtension.Scritp_AlertAndRedirect">
            <summary>
            获取返回url
            </summary>
            <param name="p"></param>
            <param name="defaultUrl"></param>
            <returns></returns>
        </member>
        <member name="M:Sanofi.Common.Extention.PageExtension.TopClose(System.Web.UI.Page)">
            <summary>
             关闭(框架)
            </summary>
            <param name="p"></param> 
            <param name="url"></param>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Sanofi.Common.Extention.PageExtension.WindowOpen(System.Web.UI.Page,System.String)" -->
        <!-- Badly formed XML comment ignored for member "M:Sanofi.Common.Extention.PageExtension.WindowOpen2(System.Web.UI.Page,System.String)" -->
        <!-- Badly formed XML comment ignored for member "M:Sanofi.Common.Extention.PageExtension.WindowOpen2(System.Web.UI.Page,System.String,System.Boolean)" -->
        <!-- Badly formed XML comment ignored for member "M:Sanofi.Common.Extention.PageExtension.WindowOpenLoadingPage(System.Web.UI.Page,System.String)" -->
        <member name="M:Sanofi.Common.Extention.PageExtension.DialogOpen(System.Web.UI.Page,System.String)">
            <summary>
             新模态窗口
            </summary>
            <param name="p"></param> 
            <param name="url"></param>
        </member>
        <member name="M:Sanofi.Common.Extention.PageExtension.ShowMessAndBack(System.Web.UI.Page,System.String)">
            <summary>
            
            </summary>
            <param name="p"></param>
            <param name="strMsg"></param>
        </member>
    </members>
</doc>
